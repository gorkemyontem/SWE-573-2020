language: python
services:
    - docker
env:
  - DOCKER_COMPOSE_VERSION=1.27.4

before_install:
    - sudo apt-get update
    - ls -la
    - sudo rm /usr/local/bin/docker-compose
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin

before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    - curl https://cli-assets.heroku.com/install.sh | sh #install heroku
    - docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com

script:
    # - docker build -t sentiment-analyser .
    # - docker-compose -t sentiment-analyser .
    - ls -la
    - docker-compose run web sh -c "python manage.py test"
    - docker-compose run web sh -c "coverage run --omit='*/.virtualenvs/*' manage.py test"
    - docker tag sentiment-analyser $DOCKER_USERNAME/sentiment_analyser:latest
    - docker tag sentiment-analyser registry.heroku.com/$HEROKU_APP/web

deploy:
    provider: script
    script: 
        - docker push $DOCKER_USERNAME/sentiment_analyser:latest
        - docker push registry.heroku.com/$HEROKU_APP/web
        - heroku container:release web --app $HEROKU_APP
        # - docker-compose ${COMPOSE_FILES} build
        # - docker-compose ${COMPOSE_FILES} -p adopdockercompose up -d
        # - count=0; until docker logs adopdockercompose_site_1 | grep "Server running..." &> /dev/null || (( count++ > 12 )); do echo "Waiting $count"; sleep 5; done
        # - docker logs adopdockercompose_site_1
        # - docker logs adopdockercompose_site_1 | grep "Server running..." &> /dev/null
        # - curl -sL -w "%{http_code}\\n" "http://localhost/adop-docker-compose/" -o /dev/null | grep "200" &> /dev/null
    on:
        branch: main

